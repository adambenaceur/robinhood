[{"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\index.js":"1","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\reportWebVitals.js":"2","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\App.js":"3","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Stats.js":"4","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Header.js":"5","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Newsfeed.js":"6","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\LineGraph.js":"7","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\StatsRow.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":495,"mtime":1648005104440,"results":"12","hashOfConfig":"10"},{"size":2500,"mtime":1648017560954,"results":"13","hashOfConfig":"10"},{"size":788,"mtime":1647549886186,"results":"14","hashOfConfig":"10"},{"size":607,"mtime":1647700366398,"results":"15","hashOfConfig":"10"},{"size":2168,"mtime":1648000854547,"results":"16","hashOfConfig":"10"},{"size":692,"mtime":1648017773220,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2i7o5l",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\index.js",[],["37","38"],"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\reportWebVitals.js",[],"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\App.js",[],"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Stats.js",["39"],"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Header.js",["40","41","42","43","44"],"import React from 'react'\r\nimport Logo from './robinhood.svg'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className='header__wrapper'>\r\n        {/* logo */}\r\n        <div className='header__logo'></div>\r\n            <img src={Logo} width={25} alt='robinhood'/>\r\n        {/* search */}\r\n        <div className='header__search'>\r\n            <div className='header__searchContainer'> <input className='header__searchInput'placeholder='Search' type='text'/></div>\r\n        </div>\r\n        {/* menu items */}\r\n        <div className='header__menuItems'>\r\n            <a >Free Stocks</a>\r\n            <a  >Portfolio</a>\r\n            <a >Cash</a>\r\n            <a >Messages</a>\r\n            <a >Account</a>\r\n\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\Newsfeed.js",[],"C:\\Users\\benac\\Documents\\robinhood-clone\\src\\LineGraph.js",["45"],"import React, {useState, useEffect} from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport './LineGraph.css'\r\n\r\n\r\nfunction LineGraph() {\r\n    const [graphData, setGraphData ] = useState([]);\r\n    const data = [{\r\n      x:10,\r\n      y:20\r\n    }, {\r\n      x:15,\r\n      y:10\r\n    }]\r\n\r\n    const createMockData = () => {\r\n      let data = [];\r\n      let value = 50;\r\n      for(var i = 0; i < 364; i++) {\r\n        let date = new Date();\r\n        date.setHours(0,0,0,0);\r\n        date.setDate(i);\r\n        value += Math.round((Math.random() < 0.5 ? 1 : 0 ) * Math.random() * 10);\r\n        data.push({x: date, y: value});\r\n      }\r\n      setGraphData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n      createMockData();\r\n    }, [])\r\n\r\n  return (\r\n      <div className='linegraph'>\r\n          <Line\r\n            data={{\r\n              datasets: [ {\r\n                type: 'line',\r\n                data: graphData,\r\n                backgroundColor: 'black',\r\n                borderColor: '#5AC53B',\r\n                borderWidth:2,\r\n                pointBorderColor: 'rgba(0,0,0,0)',\r\n                pointBackgroundColor: 'rgba(0,0,0,0)',\r\n                pointHoverBackgroundColor: '#5AC53B',\r\n                pointHoverBorderWidth: 4,\r\n                pointHoverRadius: 6,\r\n              }]\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              legend: {\r\n                display: false\r\n              },\r\n              tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n              },\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    type: 'time',\r\n                    time: {\r\n                      format: 'MM/DD/YY',\r\n                      tooltipFormat: 'll',\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    }\r\n                  },\r\n                ],\r\n                yAxes: [{\r\n                  ticks: {\r\n                    display: false\r\n\r\n                  }\r\n                }]\r\n              }\r\n            }}\r\n          />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph","C:\\Users\\benac\\Documents\\robinhood-clone\\src\\StatsRow.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":29,"column":28,"nodeType":"53","messageId":"54","endLine":29,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":17,"column":13,"nodeType":"57","endLine":17,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":18,"column":13,"nodeType":"57","endLine":18,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":19,"column":13,"nodeType":"57","endLine":19,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":20,"column":13,"nodeType":"57","endLine":20,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":21,"column":13,"nodeType":"57","endLine":21,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":8,"column":11,"nodeType":"60","messageId":"61","endLine":8,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":14,"column":17,"nodeType":"57","endLine":14,"endColumn":50},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]